# http://git-scm.com/book/en/Customizing-Git-Git-Configuration
# https://github.com/tiimgreen/github-cheat-sheet#git-configurations
# http://haacked.com/archive/2014/07/28/github-flow-aliases/
# Docs can be accessed via: `$ man git-<command>` (e.g. `$ man git-push`)

[alias]
  aliases = config --get-regexp alias
  amend = commit --all --amend
  bclean = "!f() { git branch --merged ${1-master} | grep -v " ${1-master}$" | xargs -r git branch -d; }; f"
  bdone = "!f() { git checkout ${1-master} && git up && git bclean ${1-master}; }; f"
  br = branch
  branches = branch -a
  brm = branch --move # <new-branch-name>
  c = commit
  cam = !git add --all && git commit --message
  cge = config --global --edit
  cg = config --global # <option> <value>
  cm = commit --message
  co = checkout
  cob = checkout -b # <new-branch-name>
  col = checkout -
  com = checkout master
  comf = checkout origin/master # <file-path> OR <file-name>
  df = diff
  g = grep -I
  gp = push
  lg = log --patch
  lol = log --graph --oneline --date-order --decorate --color --all -n 250
  loq = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --
  pb = publish-branch
  p = push
  pf = push --force
  pn = push --set-upstream origin head
  rb = rbranch
  rbm = rebase master
  rbmi = rebase --interactive master
  rc = rank-contributors
  remotes = remote --verbose
  rv = review
  save = !git add --all && git commit -m 'SAVEPOINT'
  sm = show-merges
  st = status --short --branch
  tags = tag --list
  undo = reset head~1 --mixed
  up = !git pull --rebase --prune $@ && git submodule update --init --recursive
  wip = !git add --update && git commit --message="WIP"
  wipe = !git add --all && git commit --quiet --message='WIPE SAVEPOINT' && git reset head~1 --hard
[core]
  autocrlf = false
  # Custom global `.gitignore` file:
  excludesfile = ~/.gitignore
  # Treat spaces before tabs, lines that are indented with 8 or more
  # spaces, and all kinds of trailing whitespace as an error:
  whitespace = space-before-tab,indent-with-non-tab,trailing-space
  # Watch for case changes:
  ignorecase = false
[push]
  default = simple
[merge]
  log = true
[rerere]
  enabled = 1
[branch]
  autosetuprebase = always
[color]
  # Use colors in Git commands that are capable of colored output when
  # outputting to the terminal:
  ui = auto
[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green
[color "diff"]
  meta = yellow bold
  frag = magenta bold
  old = red bold
  new = green bold
[color "status"]
  added = yellow
  changed = green
  untracked = cyan
[help]
  autocorrect = 1
